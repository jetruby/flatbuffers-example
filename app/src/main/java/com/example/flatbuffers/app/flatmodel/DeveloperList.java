package com.example.flatbuffers.app.flatmodel;// automatically generated by the FlatBuffers compiler, do not modify

import java.nio.*;
import java.lang.*;
import java.util.*;

import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class DeveloperList extends Table {
    public static DeveloperList getRootAsDeveloperList(ByteBuffer _bb) {
        return getRootAsDeveloperList(_bb, new DeveloperList());
    }

    public static DeveloperList getRootAsDeveloperList(ByteBuffer _bb, DeveloperList obj) {
        _bb.order(ByteOrder.LITTLE_ENDIAN);
        return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb));
    }

    public void __init(int _i, ByteBuffer _bb) {
        bb_pos = _i;
        bb = _bb;
    }

    public DeveloperList __assign(int _i, ByteBuffer _bb) {
        __init(_i, _bb);
        return this;
    }

    public Developer developers(int j) {
        return developers(new Developer(), j);
    }

    public Developer developers(Developer obj, int j) {
        int o = __offset(4);
        return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null;
    }

    public int developersLength() {
        int o = __offset(4);
        return o != 0 ? __vector_len(o) : 0;
    }

    public static int createDeveloperList(FlatBufferBuilder builder,
                                          int developersOffset) {
        builder.startObject(1);
        DeveloperList.addDevelopers(builder, developersOffset);
        return DeveloperList.endDeveloperList(builder);
    }

    public static void startDeveloperList(FlatBufferBuilder builder) {
        builder.startObject(1);
    }

    public static void addDevelopers(FlatBufferBuilder builder, int developersOffset) {
        builder.addOffset(0, developersOffset, 0);
    }

    public static int createDevelopersVector(FlatBufferBuilder builder, int[] data) {
        builder.startVector(4, data.length, 4);
        for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]);
        return builder.endVector();
    }

    public static void startDevelopersVector(FlatBufferBuilder builder, int numElems) {
        builder.startVector(4, numElems, 4);
    }

    public static int endDeveloperList(FlatBufferBuilder builder) {
        int o = builder.endObject();
        return o;
    }

    public static void finishDeveloperListBuffer(FlatBufferBuilder builder, int offset) {
        builder.finish(offset);
    }
}

